using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;

namespace Fundamentals
{
    class Program
    {
        static void Main(string[] args)
        {
            Dictionary<string, string> pieceComposer = new Dictionary<string, string>();
            Dictionary<string, string> pieceKey = new Dictionary<string, string>();

            int n = int.Parse(Console.ReadLine());
            for (int i = 0; i < n; i++)
            {
                string[] info = Console.ReadLine().Split("|").ToArray();
                string piece = info[0];
                string composer = info[1];
                string key = info[2];

                if (!pieceComposer.ContainsKey(piece))
                {
                    pieceComposer[piece] = composer;
                    pieceKey[piece] = key;
                }

            }

            string command = Console.ReadLine();
            while (command != "Stop")
            {
                string[] splitted = command.Split("|").ToArray();
                if (command.Contains("Add"))
                {
                    string piece = splitted[1];
                    string composer = splitted[2];
                    string key = splitted[3];

                    if (pieceComposer.ContainsKey(piece))
                    {
                        Console.WriteLine($"{piece} is already in the collection!");
                    }
                    else
                    {
                        pieceComposer[piece] = composer;
                        pieceKey[piece] = key;
                        Console.WriteLine($"{piece} by {composer} in {key} added to the collection!");
                    }
                }
                if (command.Contains("Remove"))
                {
                    string piece = splitted[1];
                    if (pieceComposer.ContainsKey(piece))
                    {
                        pieceComposer.Remove(piece);
                        pieceKey.Remove(piece);
                        Console.WriteLine($"Successfully removed {piece}!");
                    }
                    else
                    {
                        Console.WriteLine($"Invalid operation! {piece} does not exist in the collection.");
                    }
                }
                if (command.Contains("ChangeKey"))
                {
                    string piece = splitted[1];
                    string newKey = splitted[2];

                    if (pieceComposer.ContainsKey(piece))
                    {
                        pieceKey[piece] = newKey;
                        Console.WriteLine($"Changed the key of {piece} to {newKey}!");
                    }
                    else
                    {
                        Console.WriteLine($"Invalid operation! {piece} does not exist in the collection.");
                    }
                }
                command = Console.ReadLine();
            }
            Console.WriteLine(string.Join($"{Environment.NewLine}", pieceComposer
                
                .Select(x => $"{x.Key} -> Composer: {x.Value}, Key: {pieceKey[x.Key]}")));

        }
    }
}
